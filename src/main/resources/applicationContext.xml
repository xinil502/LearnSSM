<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">


    <!--   使用Spring来创建对象，Spring来设置对象的值
        bean == 对象 == new 类型()
        bean
            id：设置变量名
            class：new 的对象
            property：给对象中的属性设置一个值，
-->
    <bean id="user2" class="cn.xinil.domain.User" name="u2,U2,user_2,User_2">
        <property name="id" value="70"/>
        <property name="uid" value="77"/>
        <property name="uname" value="1"/>
        <property name="uaddress" value="1"/>
        <property name="uage" value="1"/>
        <property name="uclass" value="1"/>
        <property name="ugender" value="1"/>
    </bean>

    <bean id="springMapperImpl1" class="cn.xinil.dao.Impl.SpringMapperImpl_1"/>
    <bean id="springMapperImpl2" class="cn.xinil.dao.Impl.SpringMapperImpl_2"/>
    <bean id="springMapperImpl3" class="cn.xinil.dao.Impl.SpringMapperImpl_3"/>
    <!--        value：具体的值，基本数据类型。
              ref:：引用Spring容器中创建好的对象。-->
    <bean id="springService" class="cn.xinil.service.impl.SpringServiceImpl">
        <property name="springMapper"
                  ref="springMapperImpl1"/>
<!--              ref="springMapperImpl2"/>    -->
<!--              ref="springMapperImpl3"/>    -->
    </bean>

    <alias name="springMapperImpl1" alias="sm1"/>
    <alias name="springMapperImpl2" alias="sm2"/>
    <alias name="springMapperImpl3" alias="sm3"/>
    <alias name="springService" alias="ss"/>

    <bean id="address" class="cn.xinil.domain.Address">
        <property name="address" value="西安市长安区"/>
    </bean>
    <bean id="student" class="cn.xinil.domain.Student">
<!--        普通的value注入-->
        <property name="name" value="rjw"/>
<!--        bean注入，ref-->
        <property name="address" ref="address"/>
<!--        空注入-->
        <property name="wife">
            <null/>
        </property>
<!--        数组注入-->
        <property name="books">
            <array value-type="java.lang.String">
                <value>红楼梦</value>
                <value>西游记</value>
                <value>三国演义</value>
                <value>水浒传</value>
            </array>
        </property>
<!--        List注入-->
        <property name="hobbies">
            <list>
                <value>敲代码</value>
                <value>听歌</value>
                <value>逛b站</value>
            </list>
        </property>
<!--        set注入-->
        <property name="games">
            <set>
                <value>LOL</value>
                <value>COC</value>
                <value>IDEA</value>
            </set>
        </property>
<!--        Map注入-->
        <property name="card">
            <map>
                <entry key="身份证" value="610123455412341234"/>
                <entry key="学生证" value="04193070"/>
                <entry key="理发店会员卡" value="15378970308"/>
            </map>
        </property>
<!--        properties注入-->
        <property name="info">
            <props>
                <prop key="driver">com.mysql.cj.jdbc.Driver</prop>
                <prop key="url">jdbc:mysql://localhost:3306</prop>
                <prop key="username">root</prop>
                <prop key="password">root</prop>
            </props>
        </property>
    </bean>
    <bean id="address2" class="cn.xinil.domain.Address" p:address="陕西西安" scope="request"/>

    <context:annotation-config/>  <!--注解支持-->
    <bean id="cat" class="cn.xinil.domain.Cat"/>
    <bean id="dog" class="cn.xinil.domain.Dog"/>
    <bean id="people" class="cn.xinil.domain.People"/>

<!--    注册Bean-->
    <bean id="userService" class="cn.xinil.test.aop_1.UserServiceImpl"/>
    <bean id="beforeLog" class="cn.xinil.test.aop_1.BeforeLog"/>
    <bean id="afterLog" class="cn.xinil.test.aop_1.AfterLog"/>

<!--&lt;!&ndash;    方式一：使用原生Spring API接口&ndash;&gt;-->
<!--&lt;!&ndash;    配置AOP:需要导入AOP的约束&ndash;&gt;-->
<!--    <aop:config>-->
<!--&lt;!&ndash;    选择切入点：需要在哪里执行Spring: 表达式execution(要执行的位置！ 修饰词 返回值 类名 方法名 参数)&ndash;&gt;-->
<!--        <aop:pointcut id="point" expression="execution(* cn.xinil.test.aop_1.UserServiceImpl.*(..))"/>-->
<!--&lt;!&ndash;    执行环绕增加&ndash;&gt;-->
<!--        <aop:advisor advice-ref="beforeLog" pointcut-ref="point"/>-->
<!--        <aop:advisor advice-ref="afterLog" pointcut-ref="point"/>-->
<!--    </aop:config>-->

<!--    方式二：使用自定义类-->
    <bean id="myPointCut" class="cn.xinil.test.aop_2.MyPointCut"/>
    <aop:config>
<!--        选择切面， ref = 引用的类-->
        <aop:aspect ref="myPointCut">
<!--            切入点-->
            <aop:pointcut id="point" expression="execution(* cn.xinil.test.aop_1.UserServiceImpl.*(..))"/>
<!--            应用通知-->
            <aop:before method="before" pointcut-ref="point"/>
            <aop:after method="after" pointcut-ref="point"/>
            <aop:after method="after" pointcut-ref="point"/>
        </aop:aspect>
    </aop:config>

</beans>