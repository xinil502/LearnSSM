<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        https://www.springframework.org/schema/mvc/spring-mvc.xsd">


<!--    注解开发：自动扫描包，由IOC容器统一管理-->
    <context:component-scan base-package="cn.xinil.controller"/>
<!--    让Spring MVC不处理静态资源  .html .css .js .mp3 .mp4-->
    <mvc:default-servlet-handler/>

<!--    支持mvc注解驱动：
            在 Spring 中一般采用 @RequestMapping 注解来完成映射关系。
            要想使 @RequestMapping 注解生效。
            必须向上下文中注册 DefaultAnnotationHandlerMapping
            和一个AnnotationMethodHandlerAdapter 实例
            这两个实例分别在类级别和方法级别处理。
            而 annotation-driven 配置帮我们自动完成上述两个实例的注入。
-->
    <mvc:annotation-driven/>


<!--    视图解析器：DispatcherServlet 给他的 Model 解析出视图名
                模板引擎 Thymeleaf  Freemarker....-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" id="InternalResourceViewResolver">
<!--        前缀-->
        <property name="prefix" value="/WEB-INF/jsp/"/>
<!--        后缀-->
        <property name="suffix" value=".jsp"/>
    </bean>

</beans>